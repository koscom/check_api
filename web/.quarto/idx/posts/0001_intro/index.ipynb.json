{"title":"웹사이트 소개","markdown":{"yaml":{"date":"2023-11-22","categories":["뉴스"],"image":"check_api_service.png","title":"웹사이트 소개"},"headingText":"CHECK-API 서비스","containsRefs":false,"markdown":"\n\n\n\n\n\n\n\n\n본 웹사이트는 코스콤 CHECK-API 서비스를 활용하는 다양한 방법과 예제를 제공합니다.\n\n\n\n\nCHECK-API 서비스는 코스콤 CHECK 서비스의 금융 데이터를 체크 단말을 거치지 않고 직접 고객의 개인 컴퓨터나 서버에 REST-API 방식으로 제공하는 서비스 입니다.\n\n\n![그림 1: CHECK-API 서비스](check_api_service.png)\n\n\n보다 자세한 내용과 신청 방법은 CHECK-API 서비스 소개 웹사이트에 있습니다.\n\n- CHECK-API 서비스 소개 웹사이트 : [https://checkapi.koscom.co.kr/](https://checkapi.koscom.co.kr/){target=\"\\_blank\"}\n\n\n## CHECK-API 서비스의 활용\n\n\nCHECK-API 서비스를 사용하면 사용자가 직접 금융 데이터 원본을 대상으로 데이터 분석을 하거나 이를 활용한 분석 프로그램을 작성할 수 있습니다.\n\n\n### 예제 1: CHECK-API를 이용한 간단한 대시보드\n\n\n다음 화면은 CHECK-API를 사용하여 주식의 일간 차트를 그리는 간단한 대시보드 예제입니다.\n\n\n![그림 2: CHECK-API로 제작한 대시보드 프로그램 예제](video1.gif){width=100%}\n\n\n참고로 본 대시보드 예제의 소스코드는 다음과 같습니다.\n\n\n```{.python}\nimport dash as ds\nimport kquant as kq\n\n\ndf_symbol = kq.symbol_stock()[:10]\nname_list = df_symbol.NAME.values\nsymbol_dict = dict(zip(df_symbol.NAME, df_symbol.SYMBOL))\ninitial_name = name_list[0]\ninitial_symbol = symbol_dict[initial_name]\ninitial_fig = kq.chart_candle(kq.daily_stock(\n    initial_symbol), title=f\"{initial_name}\")\n\napp = ds.Dash()\n\napp.layout = ds.html.Div([\n    ds.html.H1(children=\"대시보드 예제\", style={\"text-align\": \"center\"}),\n    ds.html.Div([\n        ds.html.Div([ds.dcc.Dropdown(name_list, initial_name, id=\"dropdown-selection\")],\n                    style={\"width\": \"300px\", \"margin-top\": \"60px\"}),\n        ds.html.Div([ds.dcc.Graph(id=\"candle\", figure=initial_fig)],\n                    style={\"width\": \"1200px\", \"height\": \"600px\"})\n    ], style={\"display\": \"flex\"})\n])\n\n\n@ds.callback(\n    ds.Output(\"candle\", \"figure\"),\n    ds.Input(\"dropdown-selection\", \"value\")\n)\ndef update_graph(value):\n    df = kq.daily_stock(symbol_dict[value])\n    return kq.chart_candle(df, title=f\"{value}\")\n\n\nif __name__ == '__main__':\n    app.run(debug=False)\n```\n\n\n### 예제 2 : Telegram과 CHECK-API 연동\n\n\n다음 화면은 CHECK-API를 Telegram과 연동하여 주식의 현재가격을 조회하거나 일간 차트를 그리는 간단한 예제입니다.\n\n\n![그림 3: Telegram과 CHECK-API 연동 예제](video2.gif){width=100%}\n\n\n## 본 웹사이트의 내용\n\n\n이러한 응용 프로그램을 제작하기 위해서는 파이썬이나 자바와 같은 프로그래밍 언어와 REST-API 호출 방법그리고 고급 분석을 위한 다양한 라이브러리를 쓸 수 있어야 합니다.\n\n본 웹사이트에서는 CHECK-API 서비스를 보다 잘 활용하기 위해 프로그래밍 언어와 라이브러리 설치와 같은 기초부터 각종 고급 분석 예제 코드를 제공합니다.\n\n\n## 덧글 기능 사용\n\n\n본 블로그에서 덧글 기능을 사용하기 위해서는 github 서비스 계정으로 로그인하셔야 합니다. github 서비스 계정은 다음 웹사이트에서 무료로 생성할 수 있습니다.\n\n- [https://github.com/](https://github.com/){target=\"\\_blank\"}\n\n\n\n","srcMarkdownNoYaml":"\n\n\n\n\n\n\n\n\n본 웹사이트는 코스콤 CHECK-API 서비스를 활용하는 다양한 방법과 예제를 제공합니다.\n\n\n## CHECK-API 서비스\n\n\nCHECK-API 서비스는 코스콤 CHECK 서비스의 금융 데이터를 체크 단말을 거치지 않고 직접 고객의 개인 컴퓨터나 서버에 REST-API 방식으로 제공하는 서비스 입니다.\n\n\n![그림 1: CHECK-API 서비스](check_api_service.png)\n\n\n보다 자세한 내용과 신청 방법은 CHECK-API 서비스 소개 웹사이트에 있습니다.\n\n- CHECK-API 서비스 소개 웹사이트 : [https://checkapi.koscom.co.kr/](https://checkapi.koscom.co.kr/){target=\"\\_blank\"}\n\n\n## CHECK-API 서비스의 활용\n\n\nCHECK-API 서비스를 사용하면 사용자가 직접 금융 데이터 원본을 대상으로 데이터 분석을 하거나 이를 활용한 분석 프로그램을 작성할 수 있습니다.\n\n\n### 예제 1: CHECK-API를 이용한 간단한 대시보드\n\n\n다음 화면은 CHECK-API를 사용하여 주식의 일간 차트를 그리는 간단한 대시보드 예제입니다.\n\n\n![그림 2: CHECK-API로 제작한 대시보드 프로그램 예제](video1.gif){width=100%}\n\n\n참고로 본 대시보드 예제의 소스코드는 다음과 같습니다.\n\n\n```{.python}\nimport dash as ds\nimport kquant as kq\n\n\ndf_symbol = kq.symbol_stock()[:10]\nname_list = df_symbol.NAME.values\nsymbol_dict = dict(zip(df_symbol.NAME, df_symbol.SYMBOL))\ninitial_name = name_list[0]\ninitial_symbol = symbol_dict[initial_name]\ninitial_fig = kq.chart_candle(kq.daily_stock(\n    initial_symbol), title=f\"{initial_name}\")\n\napp = ds.Dash()\n\napp.layout = ds.html.Div([\n    ds.html.H1(children=\"대시보드 예제\", style={\"text-align\": \"center\"}),\n    ds.html.Div([\n        ds.html.Div([ds.dcc.Dropdown(name_list, initial_name, id=\"dropdown-selection\")],\n                    style={\"width\": \"300px\", \"margin-top\": \"60px\"}),\n        ds.html.Div([ds.dcc.Graph(id=\"candle\", figure=initial_fig)],\n                    style={\"width\": \"1200px\", \"height\": \"600px\"})\n    ], style={\"display\": \"flex\"})\n])\n\n\n@ds.callback(\n    ds.Output(\"candle\", \"figure\"),\n    ds.Input(\"dropdown-selection\", \"value\")\n)\ndef update_graph(value):\n    df = kq.daily_stock(symbol_dict[value])\n    return kq.chart_candle(df, title=f\"{value}\")\n\n\nif __name__ == '__main__':\n    app.run(debug=False)\n```\n\n\n### 예제 2 : Telegram과 CHECK-API 연동\n\n\n다음 화면은 CHECK-API를 Telegram과 연동하여 주식의 현재가격을 조회하거나 일간 차트를 그리는 간단한 예제입니다.\n\n\n![그림 3: Telegram과 CHECK-API 연동 예제](video2.gif){width=100%}\n\n\n## 본 웹사이트의 내용\n\n\n이러한 응용 프로그램을 제작하기 위해서는 파이썬이나 자바와 같은 프로그래밍 언어와 REST-API 호출 방법그리고 고급 분석을 위한 다양한 라이브러리를 쓸 수 있어야 합니다.\n\n본 웹사이트에서는 CHECK-API 서비스를 보다 잘 활용하기 위해 프로그래밍 언어와 라이브러리 설치와 같은 기초부터 각종 고급 분석 예제 코드를 제공합니다.\n\n\n## 덧글 기능 사용\n\n\n본 블로그에서 덧글 기능을 사용하기 위해서는 github 서비스 계정으로 로그인하셔야 합니다. github 서비스 계정은 다음 웹사이트에서 무료로 생성할 수 있습니다.\n\n- [https://github.com/](https://github.com/){target=\"\\_blank\"}\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"css":["../../styles.css"],"highlight-style":"github","include-in-header":[{"text":"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/gifffer/1.5.0/gifffer.min.js\" integrity=\"sha512-GbNhK/lI2qOfuRjXQsTfI32F9+vNTAx4pEujYKshY6WMOhxiLUi8HDwU2tI7gNpgWQgpgcgMsFgv0f9J9x5c2Q==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\"></script>\n"}],"include-after-body":[{"text":"<script type=\"text/javascript\">\nwindow.onload = function() {\n  Gifffer({\n    playButtonStyles: {\n      'width': '60px',\n      'height': '60px',\n      'border-radius': '30px',\n      'background': 'rgba(236, 240, 241, 0.8)',\n      'position': 'absolute',\n      'top': '50%',\n      'left': '50%',\n      'margin': '-30px 0 0 -30px'\n    },\n    playButtonIconStyles: {\n      'width': '0',\n      'height': '0',\n      'border-top': '14px solid transparent',\n      'border-bottom': '14px solid transparent',\n      'border-left': '14px solid rgba(255, 255, 255, 0.8)',\n      'position': 'absolute',\n      'left': '26px',\n      'top': '16px'\n    }\n  });\n  filter_box = document.querySelector(\"#listing-listing > div.listing-actions-group > div.input-group.input-group-sm.quarto-listing-filter > input\");\n  if (filter_box !== null) {\n    try {\n      filter_box.placeholder = \"제목 필터링\";\n    } catch (e) {}\n  }\n}\n</script>\n"}],"output-file":"index.html"},"language":{"toc-title-document":"목차","toc-title-website":"목차","related-formats-title":"기타 형식","related-notebooks-title":"Notebooks","source-notebooks-prefix":"원천","other-links-title":"기타 링크","code-links-title":"코드 링크","launch-dev-container-title":"Dev 컨테이너 실행","launch-binder-title":"랜치 Binder","article-notebook-label":"기사 노트북","notebook-preview-download":"노트북 다운로드","notebook-preview-download-src":"소스 다운로드","notebook-preview-back":"기사로 돌아가기","manuscript-meca-bundle":"MECA 아카이브","section-title-abstract":"초록","section-title-appendices":"부록","section-title-footnotes":"각주","section-title-references":"참고문헌","section-title-reuse":"라이센스","section-title-copyright":"저작권","section-title-citation":"인용","appendix-attribution-cite-as":"인용방법","appendix-attribution-bibtex":"BibTeX 인용:","title-block-author-single":"저자","title-block-author-plural":"저자","title-block-affiliation-single":"소속","title-block-affiliation-plural":"소속","title-block-published":"작성일","title-block-modified":"갱신일","title-block-keywords":"키워드","callout-tip-title":"힌트","callout-note-title":"노트","callout-warning-title":"경고","callout-important-title":"중요","callout-caution-title":"주의","code-summary":"코드","code-tools-menu-caption":"코드","code-tools-show-all-code":"전체 코드 표시","code-tools-hide-all-code":"전체 코드 숨기기","code-tools-view-source":"소스 코드 표시","code-tools-source-code":"소스 코드","code-line":"선","code-lines":"윤곽","copy-button-tooltip":"클립보드 복사","copy-button-tooltip-success":"복사완료!","repo-action-links-edit":"편집","repo-action-links-source":"소스코드 보기","repo-action-links-issue":"이슈 보고","back-to-top":"맨 위로","search-no-results-text":"일치 없음","search-matching-documents-text":"일치된 문서","search-copy-link-title":"검색 링크 복사","search-hide-matches-text":"추가 검색 결과 숨기기","search-more-match-text":"추가 검색결과","search-more-matches-text":"추가 검색결과","search-clear-button-title":"제거","search-detached-cancel-button-title":"취소","search-submit-button-title":"검색","search-label":"검색","toggle-section":"토글 섹션","toggle-sidebar":"사이드바 전환","toggle-dark-mode":"다크 모드 전환","toggle-reader-mode":"리더 모드 전환","toggle-navigation":"탐색 전환","crossref-fig-title":"그림","crossref-tbl-title":"표","crossref-lst-title":"목록","crossref-thm-title":"정리","crossref-lem-title":"보조정리","crossref-cor-title":"따름정리","crossref-prp-title":"명제","crossref-cnj-title":"추측","crossref-def-title":"정의","crossref-exm-title":"보기","crossref-exr-title":"예제","crossref-ch-prefix":"장","crossref-apx-prefix":"부록","crossref-sec-prefix":"섹션","crossref-eq-prefix":"방정식","crossref-lof-title":"그림 목록","crossref-lot-title":"표 목록","crossref-lol-title":"코드 목록","environment-proof-title":"증명","environment-remark-title":"주석","environment-solution-title":"해답","listing-page-order-by":"정렬","listing-page-order-by-default":"디폴트","listing-page-order-by-date-asc":"날짜(오름차순)","listing-page-order-by-date-desc":"날짜(내림차순)","listing-page-order-by-number-desc":"페이지 번호(내림차순)","listing-page-order-by-number-asc":"페이지 번호(오름차순)","listing-page-field-date":"날짜","listing-page-field-title":"제목","listing-page-field-description":"설명","listing-page-field-author":"저자","listing-page-field-filename":"파일명","listing-page-field-filemodified":"갱신일","listing-page-field-subtitle":"부제목","listing-page-field-readingtime":"읽기 시간","listing-page-field-wordcount":"단어 수","listing-page-field-categories":"분류","listing-page-minutes-compact":"{0} 분","listing-page-category-all":"전체","listing-page-no-matches":"일치 없음","listing-page-words":"{0} 단어"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.502","date-format":"iso","theme":"flatly","cap-location":"margin","code-block-bg":true,"code-block-background":true,"title-block-banner":false,"comments":{"giscus":{"repo":"joelkim/check_api","language":"ko","category":"giscus","reactions-enabled":false}},"date":"2023-11-22","categories":["뉴스"],"image":"check_api_service.png","title":"웹사이트 소개"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}